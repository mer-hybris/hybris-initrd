#!/bin/sh

##############################################################################
#
# This file is part of Jolla recovery console
#
# Copyright (C) 2013-2015 Jolla Ltd.
# Originally written by Andrea Bernabei
# Contact: Igor Zhbanov <igor.zhbanov@jolla.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
##############################################################################

set -e

. /usr/bin/recovery-functions.sh

MAX_ATTEMPTS=5

ask_and_check_code()
{
	local ROOTFS_PATH=$1
	local PLUGIN_PATH=/usr/lib/qt5/plugins/devicelock/encpartition
	local PLUGIN="chroot $ROOTFS_PATH $PLUGIN_PATH"

	# If we can't access, assume rootfs is broken and skip device lock check
	if [ ! -x $ROOTFS_PATH$PLUGIN_PATH ]; then
		echo "[WARNING] Root file system unaccessible, bypassing device lock check."
		return 0
	fi

	if $PLUGIN --is-set lock > /dev/null 2>&1; then
		attempts_left=$MAX_ATTEMPTS
		for i in $(seq 1 $MAX_ATTEMPTS); do
			echo
			echo "Type your devicelock code and press [ENTER] key:"
			echo "(please note that the typed numbers won't be shown for security reasons)"
			read -s CODE
			if $PLUGIN --check-code $CODE > /dev/null 2>&1; then
				echo "[OK] Code accepted."
				return 0
			else
				attempts_left=$(($MAX_ATTEMPTS - $i))
				echo "[WARNING] Wrong code, try again ($attempts_left left)"
				sleep 1
			fi
		done

		echo "[WARNING] No attempts left. Exiting..."
		touch /.time_lock
		return 1
	else
		echo "[OK] No lockcode has been set. Proceeding..."
		return 0
	fi
}

# The scripts expects path to mounted rootfs as first argument.
ask_and_check_code $1 || {
	echo_err "[ERROR] Code check failed. Exiting..."
	exit 1
}
